<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:umam="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umame="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Enums;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umamf="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Filters;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umamm="clr-namespace:UiPath.MicrosoftOffice365.Activities.Mail.Models;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:umm="clr-namespace:UiPath.MicrosoftOffice365.Models;assembly=UiPath.MicrosoftOffice365" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.MicrosoftOffice365.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Shared.Services.Graph.Mail.Models</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Filters</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Mail.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Filters</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail.Models</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.MicrosoftOffice365</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="902.4000000000001,1456" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(umm:Office365Message)" Name="emailList">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="SourceIdRef">GetEmailListConnections_1</x:String>
            <x:String x:Key="SourcePropertyName">EmailList</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="strCVPath">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="SourceIdRef">InvokeWorkflowFile_2</x:String>
            <x:String x:Key="SourcePropertyName">strCVPath</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="strCVText">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="SourceIdRef">InvokeWorkflowFile_2</x:String>
            <x:String x:Key="SourcePropertyName">strCVText</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Variable>
      <Variable x:TypeArguments="x:Int32" Name="intNumOfApplications" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <umam:GetEmailListConnections ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" FolderIdBackup="{x:Reference __ReferenceID0}" FreeTextFilter="{x:Null}" Mailbox="{x:Null}" MailboxBackup="{x:Reference __ReferenceID1}" ManualEntryFolder="{x:Null}" sap2010:Annotation.AnnotationText="gets all emails that satisfies the format condition" AuthScopesInvalid="False" BodyAsHtml="False" BrowserFolder="All Mail" BrowserFolderId="msgfolderroot" ConnectionId="ca07a1ca-ccd4-441f-9192-0870dce7e266" DisplayName="Get Email List" EmailList="[emailList]" FilterSelectionMode="ConditionBuilder" sap:VirtualizedContainerService.HintSize="468.8,314.4" sap2010:WorkflowViewState.IdRef="GetEmailListConnections_1" Importance="Any" IncludeSubfolders="False" MarkAsRead="True" MaxResults="10" OrderByDate="NewestFirst" SelectionMode="Browse" UnreadOnly="True" UseConnectionService="True" UseSharedMailbox="False" WithAttachmentsOnly="True">
      <umam:GetEmailListConnections.Filter>
        <umamf:MailFilterCollection LogicalOperator="And">
          <umamf:MailFilterCollection.Filters>
            <umamf:MailFilterElement DateValue="{x:Null}" Criteria="Subject" DateOperator="NewerThan" InStringValue="%[Job Application]" StringOperator="Contains" TypeOperator="Equals" TypeValue="Email" />
          </umamf:MailFilterCollection.Filters>
        </umamf:MailFilterCollection>
      </umam:GetEmailListConnections.Filter>
      <umam:GetEmailListConnections.FilterSelectionBackup>
        <usau:BackupSlot x:TypeArguments="umame:FilterMode" StoredValue="ConditionBuilder">
          <usau:BackupSlot.BackupValues>
            <scg:Dictionary x:TypeArguments="umame:FilterMode, scg:List(x:Object)" />
          </usau:BackupSlot.BackupValues>
        </usau:BackupSlot>
      </umam:GetEmailListConnections.FilterSelectionBackup>
      <umam:GetEmailListConnections.MailFolderArgument>
        <umamm:MailFolderArgument ConnectionDescriptor="{x:Null}" ManualEntryFolder="{x:Null}" BrowserFolder="All Mail" BrowserFolderId="msgfolderroot" ConnectionKey="ca07a1ca-ccd4-441f-9192-0870dce7e266" SelectionMode="Browse">
          <umamm:MailFolderArgument.Backup>
            <usau:BackupSlot x:TypeArguments="umame:ItemSelectionMode" x:Name="__ReferenceID0" StoredValue="Browse">
              <usau:BackupSlot.BackupValues>
                <scg:Dictionary x:TypeArguments="umame:ItemSelectionMode, scg:List(x:Object)" />
              </usau:BackupSlot.BackupValues>
            </usau:BackupSlot>
          </umamm:MailFolderArgument.Backup>
        </umamm:MailFolderArgument>
      </umam:GetEmailListConnections.MailFolderArgument>
      <umam:GetEmailListConnections.MailboxArg>
        <umamm:MailboxArgument SharedMailbox="{x:Null}" UseSharedMailbox="False">
          <umamm:MailboxArgument.Backup>
            <usau:BackupSlot x:TypeArguments="umame:MailboxSelectionMode" x:Name="__ReferenceID1" StoredValue="NoMailbox">
              <usau:BackupSlot.BackupValues>
                <scg:Dictionary x:TypeArguments="umame:MailboxSelectionMode, scg:List(x:Object)" />
              </usau:BackupSlot.BackupValues>
            </usau:BackupSlot>
          </umamm:MailboxArgument.Backup>
        </umamm:MailboxArgument>
      </umam:GetEmailListConnections.MailboxArg>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </umam:GetEmailListConnections>
    <ui:ForEach x:TypeArguments="umm:Office365Message" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="all processing happen here. most module calls would be here" DisplayName="For Each currentEmail" sap:VirtualizedContainerService.HintSize="468.8,1118.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[emailList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="umm:Office365Message">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="umm:Office365Message" Name="currentEmail" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,965.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="strJobKeyword" />
              <Variable x:TypeArguments="x:String" Name="strPrompt" />
              <Variable x:TypeArguments="njl:JObject" Name="LLMResponseJSON" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Email_Input_Handler - Invoke Workflow File (Modules\Email_Input_Handler.xaml)" sap:VirtualizedContainerService.HintSize="433.6,176" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Modules\Email_Input_Handler.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="umm:Office365Message" x:Key="currentEmail">[currentEmail]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="strJobKeyword">[strJobKeyword]</OutArgument>
                <OutArgument x:TypeArguments="x:Int32" x:Key="intNumOfApplications">[intNumOfApplications]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="strCVText">[strcvtext]</OutArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="strCVPath">[strCVPath]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" sap2010:Annotation.AnnotationText="for debug purposes (make sure data returns as intended)" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="433.6,161.6" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[strJobKeyword &amp; intNumOfApplications &amp; strCVPath]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:MessageBox>
            <Assign sap2010:Annotation.AnnotationText="prompt need to have &quot;&quot; and &quot;&quot; at the end along with the &quot; for the string variable." sap:VirtualizedContainerService.HintSize="433.6,159.2" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[strPrompt]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String" xml:space="preserve">["
""You are a CV parsing expert. Extract the required information From the provided CV In a structured And minimal JSON format. The extracted JSON will be used To automatically fill job application forms, so prioritize accuracy, consistency, And completeness.

Instructions:
Extract all technical skills along With their years Of experience.

Infer years Of experience Where Not explicitly mentioned (e.g., From education, job titles, Or project dates).

If experience duration Is Not clear, Default To 1 year.

Include implicit experience (e.g., tools Or technologies used In job descriptions Or personal projects, even If Not listed In a skills section).

Do Not include extra Or unnecessary data. Stick To key information typically required For job application forms.

Ensure uniform JSON format For all extracted skills.

Follow the provided JSON schema strictly. Do Not add fields that are Not In the schema, even If found In the CV.


here Is the cv:" + strCVText +"


FOLLOW THIS JSON SCHEMA:
{
  cvData: {
    personalInfo: {
      firstName: String,
      lastName: String,
      fullName: String,
      email: String,
      phone: String,
      location: {
        addressLine1: String | null,
        city: String,
        stateProvince: String | null,
        postalCode: String | null,
        country: String
      },
      websiteUrl: String | null,
      linkedinUrl: String | null
    },
    summary: String | null,
    workExperience: [
      {
        jobTitle: String,
        companyName: String,
        companyWebsite: String | null,
        location: String,
        startDate: String,
        endDate: String | null,
        isCurrent: Boolean,
        description: String | null,
        responsibilities: [
          String
        ]
      }
    ],
    education: [
      {
        institutionName: String,
        location: String,
        degree: String,
        fieldOfStudy: String,
        startDate: String | null,
        endDate: String,
        isCurrent: Boolean,
        gpa: number | String | null,
        description: String | null
      }
    ],
    skills: {
      technical: [
        {
          skillName: String,
          yearsExperience: number | null
        }
      ],
      soft: [
        String
      ],
      languages: [
        {
          language: String,
          proficiency: String
        }
      ],
      other: [
         String
      ]
    },
    projects: [
      {
        projectName: String,
        description: String,
        technologiesUsed: [
          String
        ],
        projectUrl: String | null,
        startDate: String | null,
        endDate: String | null
      }
    ],
    certifications: [
      {
        certificationName: String,
        issuingAuthority: String,
        issueDate: String | null,
        expirationDate: String | null,
        credentialId: String | null,
        url: String | null
      }
    ],
    publicationsPresentations: [
        {
            title: String,
            type: String,
            venue: String,
            Date: String,
            urlOrDoi: String | null
        }
    ],
    awardsHonors: [
        {
            awardName: String,
            issuer: String,
            dateReceived: String
        }
    ],
    referencesAvailable: Boolean | String
  },
  metadata: {
    schemaVersion: 1.1.0,
    extractionTimestamp: String,
    sourceFileName: String | null
  }
}

ONLY SEND THE JSON With NO MARKUP Or ANY OTHER MESSAGES
DONT SEND INTRO MESSAGE Or CONCLUSION MESSAGE
""
"]</InArgument>
              </Assign.Value>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </Assign>
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="" DisplayName="LLM_API_Request - Invoke Workflow File (Modules\LLM_API_Request.xaml)" sap:VirtualizedContainerService.HintSize="433.6,207.2" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Modules\LLM_API_Request.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <OutArgument x:TypeArguments="njl:JObject" x:Key="parsedResponse">[LLMResponseJSON]</OutArgument>
                <InArgument x:TypeArguments="x:String" x:Key="strPrompt">[strPrompt]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:InvokeWorkflowFile>
            <ui:WriteTextFile File="{x:Null}" sap2010:Annotation.AnnotationText="for debug purposes (make sure data returns as intended, specifically the JSON output)" DisplayName="Write Text File" FileName="[Environment.GetFolderPath(Environment.SpecialFolder.Desktop) &amp; &quot;\Untitled.txt&quot;]" sap:VirtualizedContainerService.HintSize="433.6,201.6" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[LLMResponseJSON(&quot;choices&quot;)(0)(&quot;message&quot;)(&quot;content&quot;).ToString()]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:WriteTextFile>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEach>
  </Sequence>
</Activity>